name: Build

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: Aandreba/setup-binaryen@v1.0.0
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy

      - name: Build
        run: deno task build

      - name: Bundle
        run: zip -r ../icu-datetime.zip *
        working-directory: build

      - name: Upload bundle
        uses: actions/upload-artifact@v3
        with:
          path: icu-datetime.zip

  check-release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    outputs:
      IS_TAGGED: ${{ steps.is-rel.outputs.IS_TAGGED }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # we need the tags
      - name: Check Release
        id: is-rel
        run: |
          set +e;
          git describe --exact-match --match 'v*' &> /dev/null;
          echo "IS_TAGGED=$?" >> "$GITHUB_OUTPUT";
        shell: bash

  draft-release:
    runs-on: ubuntu-latest
    needs: [build, check-release]
    if: ${{ needs.check-release.outputs.IS_TAGGED == '0' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # we need the tags

      - uses: actions/download-artifact@v3
        with:
          name: icu-datetime.zip
          path: build/

      - name: Get Tag
        id: get-tag
        run: echo "VALUE=$(git describe --exact-match --match 'v*')" >> "$GITHUB_OUTPUT"
      - name: Create release
        uses: ncipollo/release-action@v1.12.0
        with:
          replacesArtifacts: true
          allowUpdates: true
          artifactErrorsFailBuild: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          draft: true
          artifacts: "build/*"
          name: ${{ steps.get-tag.outputs.VALUE }}
          tag: ${{ steps.get-tag.outputs.VALUE }}
